Mob GarbageAssaulter : BaseMachineMob {
  name = "Garbage Assaulter"
  icon = 5,23
  race = humans
  model = data/models/units/AssaultBot/AssaultBot.kfm {
	  die = data/models/units/AssaultBot/AssaultBot_Break.nif
  }
  scale = 1.12

  skin {
    base = data/models/units/assaultbot/assault_junker.dds
    mask = data/models/units/assaultbot/assault_junker_mask.dds
    normal = data/models/units/assaultbot/assault_junker_nm.dds
  }  
  
  physics {
    default = data/models/units/AssaultBot/AssaultBot_Proxy.pml
    die = data/models/units/AssaultBot/AssaultBot.pml

    attach_destr_node_01 = data/models/Effects/TrailSmoke/DestrSmoke.nif
    attach_destr_node_02 = data/models/Effects/TrailSmoke/DestrSmokeFire.nif
    attach_destr_node_03 = data/models/Effects/Smoke/SmokeSmall2.nif
    attach_destr_node_04 = data/models/Effects/Fire/Fire_Ani1_Small.nif
    attach_destr_perc = 30
  }
  destruction = ragdoll
  explosion = ExplosionMedium_03
  stats : {
    hp = 750
    armor = 12
    range = 1700
  }

  energy = 300
  energy_gen = 820
  damage = 22
  rocket_damage = 20
  barrage_cost = 120
  barrage_duration = 2
  barrage_min_range = 750
  --AOE_state = barrage
  
  pitch_speed = 90
  min_pitch = -45
  max_pitch = 20
  yaw_speed = 360
  min_yaw = -30
  max_yaw = 30
  
  COrientationController orientation {
    rot_speed = 120
    max_tilt = 0
  }  
  
  CMultiWeaponController rockets {
    active = 0
    idle_only = 0
    count = 6 
    sync = alternate 
    fire_node_1 = pt_shoot_3
    fire_node_2 = pt_shoot_4
    fire_node_3 = pt_shoot_5
    fire_node_4 = pt_shoot_6
    fire_node_5 = pt_shoot_7
    fire_node_6 = pt_shoot_8
    shoot_snd = Data/Sounds/Units/AssaultBot/RocketLaunch
    --shoot_drain = 10 
    fire_rate = 0.2
    damage = var:rocket_damage
    precision = 100
    spot_impact_type = small_energy
    damage_type = energy
    min_range = var:range * 0.5
      
    projectile = parabolic {
  	  dispersion = 370
      spot_impact = 800
      spot_impact_type = small_energy
      effect = GarbageAssaulterRocketEffect

      decal_settings ground_hit_decal = barrage_decal1_assault

      model = data/models/projectiles/rocket/Mortar.nif {
        CTrailController trail {
          emitter = Dummy01
          material = data/models/Effects/Trails/Trail_Smoke3.nif
          tex_ratio = float: 25
          start_width = 25
          end_width = 100
          ttl = 40
          --simple_time = 90
    	  

          time0 = 0
          color0 = colora: 1, 1, 1, 1

          time1 = 3
          color1 = colora: 1, 1, 1, 1

          time2 = 50
          color2 = colora: 1, 1, 1, 0.5
          
          time3 = 100
          color3 = colora: 1, 1, 1, 0

        }  
      }
    }
  }
  
  CMultiWeaponController weapon {
    active = 1
    can_crit = 1
    idle_only = 0
    count = 2 
    sync = alternate 
    --root_node = gun_slot_2 
    fire_node_1 = pt_shoot_1
    fire_node_2 = pt_shoot_2
    shoot_anim_1 = shoot_once_right
    shoot_anim_2 = shoot_once_left
    shoot_snd = Data/Sounds/weapons/Fast Low Energy shot/

    range_far = stat:range * 0.5
    range_near = stat:range * 0.2
    proximity_bonus = 4

--    fire_rate = 0.8
    idle_time = 0.3
    damage = stat:damage

    spot_impact_type = small_energy
    spot_impact = 750
    damage_type = energy
 
    muzzle_fx ion_shot_garbass {
		  model = data/models/effects/MuzzleFlash/muzzle_flash_ion2.nif
		  frames = 2
		  frequency = 1.0
		  active_fraction	= 10
		  active_variation = 5
		  length_variation = 4
		  width_variation	= 13
		  scale	= 5
		  instances = 64
      emit = 210,48,20
	  }
    
    projectile = linear {
      spot_impact = 700
      spot_impact_type = bullet
      speed = 6000
      ground_hit_effect = BulletTerrainHitEffect
      model = data/models/projectiles/fastenergybolt/fast_energy_bolt.nif {
        scale = 1.4
        E = 210,50,20
      }
    }


}

CAreaEffect GarbageAssaulterRocketEffect {
  range = 250
  epicenter {
    spawn AssaultBotRocketEffectAnim
    physics_radius = 250 
    physics_power = 7000
  }
  tags t1 = unit | building {
    spawn ExplosionDamage {
      amount = var:rocket_damage
      --react = fire
    }
  }
}
